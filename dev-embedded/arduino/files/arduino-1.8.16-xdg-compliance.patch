diff -ur Arduino-1.8.16-orig/app/src/processing/app/Base.java Arduino-1.8.16/app/src/processing/app/Base.java
--- Arduino-1.8.16-orig/app/src/processing/app/Base.java	2021-09-03 10:49:28.000000000 +0300
+++ Arduino-1.8.16/app/src/processing/app/Base.java	2021-11-05 18:46:48.913587366 +0200
@@ -224,7 +224,7 @@
     if (parser.isGuiMode()) {
         System.out.println("Set log4j store directory " + BaseNoGui.getSettingsFolder().getAbsolutePath());
     }
-    System.setProperty("log4j.dir", BaseNoGui.getSettingsFolder().getAbsolutePath());
+    System.setProperty("log4j.dir", BaseNoGui.getDataFolder().getAbsolutePath());
 
     BaseNoGui.checkInstallationFolder();
 
@@ -311,7 +311,7 @@
 
     if (parser.isInstallBoard()) {
       ContributionsIndexer indexer = new ContributionsIndexer(
-          BaseNoGui.getSettingsFolder(), BaseNoGui.getHardwareFolder(),
+          BaseNoGui.getDataFolder(), BaseNoGui.getCacheFolder() ,BaseNoGui.getHardwareFolder(),
           BaseNoGui.getPlatform(), gpgDetachedSignatureVerifier);
       ProgressListener progressListener = new ConsoleProgressListener();
 
@@ -359,7 +359,7 @@
       ProgressListener progressListener = new ConsoleProgressListener();
       libraryInstaller.updateIndex(progressListener);
 
-      LibrariesIndexer indexer = new LibrariesIndexer(BaseNoGui.getSettingsFolder());
+      LibrariesIndexer indexer = new LibrariesIndexer(BaseNoGui.getDataFolder(), BaseNoGui.getCacheFolder());
       indexer.parseIndex();
       indexer.setLibrariesFolders(BaseNoGui.getLibrariesFolders());
       indexer.rescanLibraries();
diff -ur Arduino-1.8.16-orig/arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndexer.java Arduino-1.8.16/arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndexer.java
--- Arduino-1.8.16-orig/arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndexer.java	2021-09-03 10:49:28.000000000 +0300
+++ Arduino-1.8.16/arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndexer.java	2021-11-05 17:12:15.818189740 +0200
@@ -69,9 +69,9 @@
 
   private final List<String> badLibNotified = new ArrayList<>();
 
-  public LibrariesIndexer(File preferencesFolder) {
-    indexFile = new File(preferencesFolder, "library_index.json");
-    stagingFolder = new File(new File(preferencesFolder, "staging"), "libraries");
+  public LibrariesIndexer(File dataFolder, File cacheFolder) {
+    indexFile = new File(dataFolder, "library_index.json");
+    stagingFolder = new File(new File(cacheFolder, "staging"), "libraries");
   }
 
   public void parseIndex() throws IOException {
diff -ur Arduino-1.8.16-orig/arduino-core/src/cc/arduino/contributions/packages/ContributionsIndexer.java Arduino-1.8.16/arduino-core/src/cc/arduino/contributions/packages/ContributionsIndexer.java
--- Arduino-1.8.16-orig/arduino-core/src/cc/arduino/contributions/packages/ContributionsIndexer.java	2021-09-03 10:49:28.000000000 +0300
+++ Arduino-1.8.16/arduino-core/src/cc/arduino/contributions/packages/ContributionsIndexer.java	2021-11-05 18:37:22.681242437 +0200
@@ -64,20 +64,20 @@
 
   private final File packagesFolder;
   private final File stagingFolder;
-  private final File preferencesFolder;
+  private final File dataFolder;
   private final File builtInHardwareFolder;
   private final Platform platform;
   private final SignatureVerifier signatureVerifier;
   private final ContributionsIndex index;
 
-  public ContributionsIndexer(File preferencesFolder, File builtInHardwareFolder, Platform platform, SignatureVerifier signatureVerifier) {
-    this.preferencesFolder = preferencesFolder;
+  public ContributionsIndexer(File dataFolder, File cacheFolder, File builtInHardwareFolder, Platform platform, SignatureVerifier signatureVerifier) {
+    this.dataFolder = dataFolder;
     this.builtInHardwareFolder = builtInHardwareFolder;
     this.platform = platform;
     this.signatureVerifier = signatureVerifier;
     index = new ContributionsIndex();
-    packagesFolder = new File(preferencesFolder, "packages");
-    stagingFolder = new File(preferencesFolder, "staging" + File.separator + "packages");
+    packagesFolder = new File(dataFolder, "packages");
+    stagingFolder = new File(cacheFolder, "staging" + File.separator + "packages");
   }
 
   public void parseIndex() throws Exception {
@@ -157,7 +157,7 @@
       }
     }
 
-    File[] testIndexFiles = preferencesFolder.listFiles((dir, name) -> {
+    File[] testIndexFiles = dataFolder.listFiles((dir, name) -> {
       if (!new File(dir, name).isFile())
         return false;
       if (!name.startsWith("test_package_") || !name.endsWith("_index.json"))
@@ -166,7 +166,7 @@
     });
     if (testIndexFiles == null) {
       System.err.println(
-          format(tr("Error reading package indexes folder: {0}\n(maybe a permission problem?)"), preferencesFolder));
+          format(tr("Error reading package indexes folder: {0}\n(maybe a permission problem?)"), dataFolder));
     }
     indexFiles.addAll(Arrays.asList(testIndexFiles));
     return indexFiles;
@@ -468,7 +468,7 @@
   }
 
   public File getIndexFile(String name) {
-    return new File(preferencesFolder, name);
+    return new File(dataFolder, name);
   }
 
   public List<ContributedPackage> getPackages() {
diff -ur Arduino-1.8.16-orig/arduino-core/src/cc/arduino/utils/network/FileDownloaderCache.java Arduino-1.8.16/arduino-core/src/cc/arduino/utils/network/FileDownloaderCache.java
--- Arduino-1.8.16-orig/arduino-core/src/cc/arduino/utils/network/FileDownloaderCache.java	2021-09-03 10:49:28.000000000 +0300
+++ Arduino-1.8.16/arduino-core/src/cc/arduino/utils/network/FileDownloaderCache.java	2021-11-05 17:39:00.298780275 +0200
@@ -78,11 +78,11 @@
     }
     PreferencesData.set(CACHE_ENABLE_PREFERENCE_KEY, Boolean.toString(enableCache));
 
-    final File settingsFolder;
-    settingsFolder = BaseNoGui.getSettingsFolder();
-    if (settingsFolder != null) {
-      cacheFolder = Paths.get(settingsFolder.getPath(), "cache")
-        .toString();
+    final File defaultCacheFolder;
+    defaultCacheFolder = BaseNoGui.getCacheFolder();
+
+    if (defaultCacheFolder != null) {
+      cacheFolder = Paths.get(defaultCacheFolder.getPath()).toString();
     } else {
       enableCache = false;
       cacheFolder = null;
diff -ur Arduino-1.8.16-orig/arduino-core/src/processing/app/BaseNoGui.java Arduino-1.8.16/arduino-core/src/processing/app/BaseNoGui.java
--- Arduino-1.8.16-orig/arduino-core/src/processing/app/BaseNoGui.java	2021-09-03 10:49:28.000000000 +0300
+++ Arduino-1.8.16/arduino-core/src/processing/app/BaseNoGui.java	2021-11-07 11:09:34.128439990 +0200
@@ -315,6 +315,38 @@
     return settingsFolder;
   }
 
+  static public File getCacheFolder() {
+    File cacheFolder = null;
+    try {
+      cacheFolder = getPlatform().getCacheFolder();
+    } catch (Exception e) {
+        showError(tr("Problem getting cache folder"),
+                  tr("Error getting the Arduino cache folder."), e);
+    }
+    return cacheFolder;
+  }
+
+  static public File getDataFolder() {
+    File dataFolder = null;
+    try {
+      dataFolder = getPlatform().getDataFolder();
+    } catch (Exception e) {
+        showError(tr("Problem getting data folder"),
+                  tr("Error getting the Arduino data folder."), e);
+    }
+
+    // create the folder if it doesn't exist already
+    if (!dataFolder.exists()) {
+      if (!dataFolder.mkdirs()) {
+        showError(tr("Problem creating data folder."),
+                tr("Arduino cannot run because it could not\n" +
+                        "create a folder to store your data."), null);
+      }
+    }
+
+    return dataFolder;
+  }
+
   static public File getSketchbookFolder() {
     String sketchBookPath = PreferencesData.get("sketchbook.path");
     if (getPortableFolder() != null && !new File(sketchBookPath).isAbsolute()) {
@@ -328,7 +360,7 @@
   }
 
   static public UserLibraryFolder getSketchbookLibrariesFolder() {
-    File libdir = new File(getSketchbookFolder(), "libraries");
+    File libdir = new File(getDataFolder(), "libraries");
     if (!libdir.exists()) {
       FileWriter freadme = null;
       try {
@@ -476,7 +508,7 @@
   }
 
   static public void initPackages() throws Exception {
-    indexer = new ContributionsIndexer(getSettingsFolder(), getHardwareFolder(), getPlatform(),
+    indexer = new ContributionsIndexer(getDataFolder(), getCacheFolder(), getHardwareFolder(), getPlatform(),
         new GPGDetachedSignatureVerifier());
 
     try {
@@ -496,7 +528,7 @@
     loadHardware(getSketchbookHardwareFolder());
     createToolPreferences(indexer.getInstalledTools(), true);
 
-    librariesIndexer = new LibrariesIndexer(getSettingsFolder());
+    librariesIndexer = new LibrariesIndexer(getPlatform().getDataFolder(), getPlatform().getCacheFolder());
     try {
       librariesIndexer.parseIndex();
     } catch (JsonProcessingException e) {
diff -ur Arduino-1.8.16-orig/arduino-core/src/processing/app/linux/Platform.java Arduino-1.8.16/arduino-core/src/processing/app/linux/Platform.java
--- Arduino-1.8.16-orig/arduino-core/src/processing/app/linux/Platform.java	2021-09-03 10:49:28.000000000 +0300
+++ Arduino-1.8.16/arduino-core/src/processing/app/linux/Platform.java	2021-11-05 16:53:49.215777932 +0200
@@ -38,6 +38,78 @@
 public class Platform extends processing.app.Platform {
 
   @Override
+  public File getSettingsFolder() throws Exception {
+    File home = new File(System.getProperty("user.home"));
+    File oldSettingsFolder = new File(home, ".arduino15");
+    File settingsFolder;
+
+    if (oldSettingsFolder.isDirectory()) {
+      settingsFolder = oldSettingsFolder;
+    } else {
+      File configHome;
+      String xdgConfigHome = System.getenv("XDG_CONFIG_HOME");
+
+      if(xdgConfigHome != null && !xdgConfigHome.isEmpty()) {
+        configHome = new File(xdgConfigHome);
+      } else {
+        configHome = new File(home, ".config");
+      }
+
+      settingsFolder = new File(configHome, "arduino");
+    }
+
+    return settingsFolder;
+  }
+
+  @Override
+  public File getDataFolder() throws Exception {
+    File home = new File(System.getProperty("user.home"));
+    File oldDataFolder = new File(home, ".arduino15");
+    File dataFolder;
+
+    if (oldDataFolder.isDirectory()) {
+      dataFolder = oldDataFolder;
+    } else {
+      File dataHome;
+      String xdgDataHome = System.getenv("XDG_DATA_HOME");
+
+      if(xdgDataHome != null && !xdgDataHome.isEmpty()) {
+        dataHome = new File(xdgDataHome);
+      } else {
+        dataHome = new File(home, ".local/share");
+      }
+
+      dataFolder = new File(dataHome, "arduino");
+    }
+
+    return dataFolder;
+  }
+
+  @Override
+  public File getCacheFolder() throws Exception {
+    File home = new File(System.getProperty("user.home"));
+    File oldCacheFolder = new File(home, ".arduino15/cache");
+    File cacheFolder;
+
+    if (oldCacheFolder.isDirectory()) {
+      cacheFolder = oldCacheFolder;
+    } else {
+      File cacheHome;
+      String xdgCacheHome = System.getenv("XDG_CACHE_HOME");
+
+      if(xdgCacheHome != null && !xdgCacheHome.isEmpty()) {
+        cacheHome = new File(xdgCacheHome);
+      } else {
+        cacheHome = new File(home, ".cache");
+      }
+
+      cacheFolder = new File(cacheHome, "arduino");
+    }
+
+    return cacheFolder;
+  }
+
+  @Override
   public void setLookAndFeel() throws Exception {
     // Override desktop check
     System.setProperty("sun.desktop", "gnome");
diff -ur Arduino-1.8.16-orig/arduino-core/src/processing/app/Platform.java Arduino-1.8.16/arduino-core/src/processing/app/Platform.java
--- Arduino-1.8.16-orig/arduino-core/src/processing/app/Platform.java	2021-09-03 10:49:28.000000000 +0300
+++ Arduino-1.8.16/arduino-core/src/processing/app/Platform.java	2021-11-05 19:12:31.235312247 +0200
@@ -69,15 +69,13 @@
     UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
   }
 
-
   public void init() throws Exception {
   }
 
-
   public File getSettingsFolder() throws Exception {
     // otherwise make a .processing directory int the user's home dir
     File home = new File(System.getProperty("user.home"));
-    File dataFolder = new File(home, ".arduino15");
+    File dataFolder = new File(home, ".arduino");
     return dataFolder;
 
     /*
@@ -96,6 +94,13 @@
     */
   }
 
+  public File getDataFolder() throws Exception {
+    return getSettingsFolder();
+  }
+
+  public File getCacheFolder() throws Exception {
+    return getSettingsFolder();
+  }
 
   /**
    * @return null if not overridden, which will cause a prompt to show instead.
diff -ur Arduino-1.8.16-orig/build/shared/manpage.adoc Arduino-1.8.16/build/shared/manpage.adoc
--- Arduino-1.8.16-orig/build/shared/manpage.adoc	2021-09-03 10:49:28.000000000 +0300
+++ Arduino-1.8.16/build/shared/manpage.adoc	2021-11-05 19:43:11.395999805 +0200
@@ -219,7 +219,7 @@
 -----
 *%LOCALAPPDATA%/Arduino15/preferences.txt* (Windows)::
 *~/Library/Arduino15/preferences.txt* (Max OS X)::
-*~/.arduino15/preferences.txt* (Linux)::
+*~/.config/arduino/preferences.txt* (Linux)::
 	This file stores the preferences used for the IDE, building and
 	uploading sketches.
 
@@ -246,6 +246,8 @@
 		External code-processing tools (that can be run through
 		the Tools menu of the IDE) can be added here.
 
+	Note: on Linux systems the above directories are located in ~/.local/share/arduino
+
 EXAMPLES
 --------
 
